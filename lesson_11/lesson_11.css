/* Осваиваем Flex-box */

/* Делаем Flex контейнер */

.container {
  display: flex;
  flex-wrap: wrap; /* Позволяет элементам переноситься на новую строку */
  /* Горизонтальная прокрутка контейнера если надо */
  /* overflow-x: auto; Позволяет горизонтальную прокрутку, если элементы не помещаются */
  gap: 2px; /* Отступы между элементами */
  /* Justify content для выравнивания элементов */
  /* Варианты: flex-start, flex-end, center, space-between, space-around, space-evenly */
  justify-content: space-around; /* Выравнивание элементов по горизонтали */
  /*  Подсветим контейнер */
  border: 1px solid #c56f6f; /* Рамка вокруг контейнера */
  background-color: #ced6e8; /* Светлый фон для контейнера */
  min-height: 50vh;

  /* Вертикальное выравнивание
    Свойство align-items определяет выравнивание элементов по вертикали */
  /* Варианты: 
    flex-start - выравнивание по верхнему краю,
    flex-end - выравнивание по нижнему краю,
    center - выравнивание по центру,
    baseline - выравнивание по базовой линии,
    stretch - растягивание элементов */
  align-items: baseline; /* Выравнивание элементов по вертикали */

  /* Направление регулируется через
    - flex-direction:
    row - элементы располагаются в строку (по умолчанию),
    row-reverse - элементы располагаются в строку в обратном порядке,
    column - элементы располагаются в столбик,
    column-reverse - элементы располагаются в столбик в обратном порядке.;
    
    */
  flex-direction: row;
}

.item {
  border: 1px solid #c56f6f;
  background-color: #f0f0f0;
  /* max-width: 130px; Закомментировали max-width */
  max-width: 200px;
  width: 130px; /* Фиксированная ширина элемента - элементы будут точно 130px */
  min-width: 100px; /* Минимальная ширина элемента */
  /* padding: 10px; */
  height: 100px; /* Высота элемента */
  text-align: center;
  margin: 5px; /* Отступы между элементами */
}

/* Управление элементами контейнера
order - определяет порядок отображения элементов в контейнере.

*/

#item1 {
  order: 0; /* Элемент будет отображаться стандартно */
  background-color: #c56f6f;
  /* Мы можем изменить выравнивание для конкретного элемента
    align-self:
    - flex-start - выравнивание по верхнему краю,
    - flex-end - выравнивание по нижнему краю,
    - center - выравнивание по центру,
    - baseline - выравнивание по базовой линии,
    - stretch - растягивание элемента на всю высоту контейнера */
  align-self: flex-end; /* Элемент будет выровнен по центру по вертикали */
  /* Еще свойства которые можно задать флекс элементам:display:
    - flex-shrink - определяет, как элемент будет сжиматься, если не хватает места,
    - flex-grow - определяет, как элемент будет расти, если есть свободное место,
    - flex-basis - определяет начальный размер элемента перед применением flex-grow и flex-shrink.
    - flex - сокращенная запись для flex-grow, flex-shrink и flex-basis.
    */
  /* flex-basis: 100px; Начальный размер элемента */
  flex-grow: 3; /* Элемент будет расти, занимая свободное место */
  flex-shrink: 3; /* Элемент будет сжиматься, если не хватает места */
}

#item2 {
  order: 0; /* Элемент будет отображаться стандартно */
  background-color: #c56f6f;
  flex-grow: 2;
  flex-shrink: 2;
}
