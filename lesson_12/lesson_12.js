// Lesson 12 - Знакомство с JS

// Вывод в консоль - часто испольуется для логирования
console.log("Простой лог");
console.warn("Предупреждение");
console.error("Ошибка");

// Вывод в браузер
// alert("Оповещение")

// Переменные

// Отличия var и let:
// 1. Область видимости (Scope):
//    - var имеет функциональную область видимости (function scope). Переменная, объявленная через var, видна во всей функции, в которой она объявлена.
//    - let имеет блочную область видимости (block scope). Переменная, объявленная через let, видна только внутри блока кода (например, внутри фигурных скобок {}), где она объявлена.
// 2. Поднятие (Hoisting):
//    - var переменные поднимаются (hoisted) и инициализируются значением undefined в начале своей области видимости.
//    - let переменные тоже поднимаются, но не инициализируются. До момента объявления к ним нельзя обращаться — это приводит к ошибке ReferenceError (так называемая "временная мёртвая зона" — Temporal Dead Zone).
// 3. Повторное объявление:
//    - var позволяет повторно объявлять одну и ту же переменную в одной области видимости без ошибок.
//    - let не позволяет повторно объявлять переменную в одной области видимости — это вызовет ошибку.
// 4. Глобальные переменные:
//    - var, объявленный в глобальной области, становится свойством глобального объекта (window в браузере). Это похоже на встроенную область видимости (built-in namespace) в Python.
//    - let, объявленный в глобальной области, не становится свойством глобального объекта.
// 5. Использование:
//    - var — устаревший способ объявления переменных, его использование не рекомендуется в современном коде.
//    - let — современный способ объявления изменяемых переменных с более предсказуемым поведением.
let first_name = "Переменная";
const last_name = "Константа";

first_name = "Новые данные";
// last_name = "Новые данные" // Uncaught TypeError: invalid assignment to const 'last_name'

// prompt - получить от пользователя данные
let user_name = prompt("Введите ваше имя");
console.log(user_name);

// Сложение строк
console.log("Привет" + " " + user_name + "!");

// Шаблонная строка. Используется "тик" - оратная кавычка, буква ё на английской раскладке и символ доллара

console.log(`Привет ${user_name}!!!!!`);

// Типы данных

// Примитивные типы данных
// number - число
let some_number = 1234567890;

// string - строка
let some_string = "Строка";

// boolean - логический тип данных. Может принимать только два значения: true или false
let some_true = true;
let some_false = false;

// null - пустота. Ничего. Пустой объект
// null - это явное присвоение значения "пустота" или "отсутствие значения".
// Это специальное значение, которое программист может присвоить переменной,
// чтобы показать, что там нет никакого объекта или значения.
// Например, когда нужно явно указать, что переменная сейчас "пустая".
let some_null = null;

// undefined - неопределенность. Переменная объявлена, но не имеет значения
// undefined - это значение по умолчанию для переменной, которая была объявлена,
// но ей не присвоено никакого значения.
// Это означает, что переменная существует, но её значение ещё не определено.
// undefined обычно сигнализирует о том, что переменная ещё не была инициализирована
// или что функция не возвращает значение.
let some_undefined;

// Правильно будет обяъвитьпеременную либо let banana, либо let banana = null
// let banana = undefined - это не правильно!!!!!!

let isAdult;
isAdult = confirm("Вам есть 18 лет?");
console.log(isAdult);
